@inject IScrollManager ScrollManager
@inject ThemeService ThemeService

<MudThemeProvider @bind-IsDarkMode="ThemeService.DarkMode" Theme="theme" />

<MudAppBar Fixed="true" Dense="true" Color="Color.Inherit" Elevation="2">
    <MudContainer Class="d-flex justify-center gap-1">
        <MudItem>
            <MudButton OnClick="@(() => ScrollToClassAsync(".about"))" Color="Color.Inherit" Variant="Variant.Text" Size="Size.Small">Sobre</MudButton>
        </MudItem>
        <MudItem>
            <MudButton OnClick="@(() => ScrollToClassAsync(".experience"))" Color="Color.Inherit" Variant="Variant.Text" Size="Size.Small">Experiência</MudButton>
        </MudItem>
        <MudItem>
            <MudButton OnClick="@(() => ScrollToClassAsync(".projects"))" Color="Color.Inherit" Variant="Variant.Text" Size="Size.Small">Projetos</MudButton>
        </MudItem>
        <MudItem>
            <MudButton OnClick="@(() => ScrollToClassAsync(".contact"))" Color="Color.Inherit" Variant="Variant.Text" Size="Size.Small">Contato</MudButton>
        </MudItem>
        <MudMenu Icon="@Icons.Material.Filled.MoreVert" Size="Size.Small" Color="Color.Inherit" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
            <MudMenuItem IconSize="Size.Small" OnClick="ToggleMode" OnTouch="ToggleMode" Class="p-1">
                <MudIcon Icon="@(isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.ModeNight)" Color="Color.Inherit" Size="Size.Small" />
            </MudMenuItem>            
        </MudMenu>
    </MudContainer>
</MudAppBar>

@code {
    public MudTheme theme = new();
    public bool isDarkMode => ThemeService.DarkMode;
    public bool isButtonActive = false;

    void ToggleMode()
    {
        ThemeService.ToggleTheme();
    }

    public async Task ScrollToClassAsync(string targetClass)
    {
        isButtonActive = true;
        await ScrollManager!.ScrollIntoViewAsync($"{targetClass}", MudBlazor.ScrollBehavior.Smooth);
    }
}
